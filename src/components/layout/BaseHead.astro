---
import LocalFont from "../generic/LocalFont.astro";
import { ClientRouter } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  ogImage?: URL;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

if (Astro.props.ogImage === undefined) {
  Astro.props.ogImage = new URL("/v1/generate/og/default.png", Astro.url);
}

const { title, description, ogImage } = Astro.props;
---

<head>
  <LocalFont />
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta name="color-scheme" content="light only" />

  <link
    rel="alternate"
    href="https://ephbaum.dev/blog.xml"
    type="application/rss+xml"
    data-analytics-rss-feed
    data-feed-url="https://ephbaum.dev/blog.xml"
  />

  <meta name="title" content={`${title} | eph baum dot dev`} />
  <meta name="description" content={description} />
  <meta
    name="copyright"
    content={`Â© ${new Date().getFullYear()} Eph Baum. All rights reserved.`}
  />

  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={ogImage} />

  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={ogImage} />

  <link rel="canonical" href={canonicalURL} />
  <link rel="icon" type="image/svg" href="/favicon.svg" />

  <title>{title} | eph baum dot dev</title>

  <ClientRouter />

  <!-- Umami Analytics -->
  {
    import.meta.env.PUBLIC_UMAMI_WEBSITE_ID && (
      <script
        is:inline
        defer
        src={
          import.meta.env.PUBLIC_UMAMI_SCRIPT_URL ||
          "https://cloud.umami.is/script.js"
        }
        data-website-id={import.meta.env.PUBLIC_UMAMI_WEBSITE_ID}
      />
    )
  }

  <!-- Analytics Tracking Function -->
  <script src="/analytics.js" is:inline></script>

  <!-- Vercel Speed Insights -->
  {
    import.meta.env.MODE === "production" && (
      <script>
        import {injectSpeedInsights} from '@vercel/speed-insights';
        injectSpeedInsights();
      </script>
    )
  }

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Track RSS feed clicks
      const rssLinks = document.querySelectorAll("[data-analytics-rss-feed]");
      rssLinks.forEach((link) => {
        link.addEventListener("click", () => {
          if ((window as any).trackEvent) {
            const feedUrl = link.getAttribute("data-feed-url");

            (window as any).trackEvent("rss_feed_click", {
              action: "subscribe_rss",
              component: "rss_link",
              feed_url: feedUrl,
            });
          }
        });
      });
    });
  </script>

  <slot />
</head>
